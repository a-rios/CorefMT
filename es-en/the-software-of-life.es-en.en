The Software of Life 
Being alive , we tend to think that life is easy to grasp . 
In the accepted classification of sciences , mathematics is thought to be the queen , and the most difficult to grasp , followed by physics , chemistry , and , finally , biology . 
But this scientific hierarchy is false and misleading : we now know that biology contains more mathematics than we ever imagined . 
When molecules entered the scientific understanding of life with the discovery of DNA , biology climbed one step up the scale , to chemistry . 
Then , with recognition of the abstract schemas dictating how genes are expressed , biology climbed even closer to mathematics . 
Today &apos;s buzzword in the study of life is &quot; systems &quot; biology . 
For a long time , those who studied the nature of life and heredity were divided into two camps : epigeneticists , who emphasized environmental influences on living organisms , and preformists , who stressed the similarities between parents and progeny . 
The epigeneticist view was clearly wrong , because something stable had to be transmitted across generations . 
But the preformist view that the entity transmitted across generations was the whole organism was contradicted by the impossibility of segmenting objects infinitely . 
What had to be transmitted was not the final organism , but the recipe to make it . 
Consider the old metaphysical puzzle : is a wooden boat whose planks are gradually replaced as they decay the same boat after all the planks have been changed ? 
&quot; Systems &quot; biology is biology that recognizes that what remains the same is the design of the boat - that which determines the relationships between the planks . 
This thought paved the way for the concept of a &quot; genetic program , &quot; akin to a computer program - a metaphor that became almost self-evident when the structure of DNA was discovered , because DNA could be visualized as a linear string of symbols , which is exactly what computers read as a program . 
Like a computer program , DNA does not preserve the final state of what it codes for ; rather , it embeds in a symbolic but concrete way ( it is a real &quot; text &quot; ) the relationships between all the objects and agents that it specifies and controls . 
A remarkable observation supports this analogy : viruses behave like individual pieces of programs , using the cell as the machine needed to make them multiply and subsequently propagate ( often by destroying the machine ) . 
When computer programming became widespread , pieces of software were found to behave the same way , and were thus called &quot; viruses . &quot; 
And when it became possible to manipulate DNA in vitro , the metaphor of a &quot; genetic program &quot; appeared even more precise : scientists could construct experiments that corresponded to the reprogramming of cells merely by working on symbols in silicon . 
The metaphor comes from the famous mathematician and computer scientist Alan Turing , who , along with John von Neumann and other theoreticians , uncovered the link between the mathematics of whole numbers and logic . 
Turing proposed that all computations and logical operations could be performed by a simple machine , which he called the Universal Turing Machine , reading and modifying a linear sequence of symbols . 
This required only the physical separation of the symbols ( visualized as a tape ) handled by the machine and the machine itself . 
Moreover , the tape carried the data that allowed the machine to proceed . 
So the data could be split into two types : a program that embedded the &quot; meaning &quot; of the logical sequence recognized by the machine , and the pure data that provided the context for the program to run . 
Genetic engineering rests on the manipulation of DNA molecules ( whether real or artificially constructed ) in order to reprogram foreign cells . 
As a result , many bacteria today produce human proteins . 
But this represents only a small part of the genetic program . 
Transfer of genes between organisms is widespread . 
Nuclear cloning , illustrated by the sheep Dolly , has made the Universal Turing Machine a highly revealing , if not all explaining , model of the cell . 
If we take this metaphor at face value , there is a surprising consequence . 
It has been shown that , the outcome of some computer programs is at once entirely deterministic , innovative , and unpredictable . 
The computer metaphor thus implies that living organisms are material systems that , facing an unforeseeable future , arrive at improbable solutions so that some of their progeny can survive in unpredictable conditions . 
Life is inherently creative . 
However , the metaphor is limited by a simple fact : computers do not make computers . 
The challenge for the new biology is to understand how they would . 
